TITLE
-----
genbufs (Static buffer generator for *any* XDAIS algorithm)

USAGE
-----
RF1, other static minimal apps

DESCRIPTION
-----------
genbufs addresses the following problem :

In static systems we don't need a heap. We don't need to call MEM_alloc() etc. 
We cant afford the codespace of these memory manager modules and 
never need to delete memory.

We simply need static configuration in the same way as BIOS can configure
objects statically. Codespace is saved, as design-time object creation is done.

We desire to do the same thing in some small footprint systems with XDAIS 
algorithms. However we have no configuration tool to help.

Presently we effectively have to pre-run the memory query section of the 
XDAIS algorithm (algAlloc), write down the sizes, alignments required then
create .bss variables with these numbers e.g.

#pragma DATA_ALIGN(g729encBuf1, 8)   <- alignment ret'd by memTab[1].alignment

Char g729encBuf1[784];               <- size returned by memTab[1].size

This is cumbersome and error-prone.


genbufs is a very simple [<2 pages src code] solution. It acts like
a tool, running any XDAIS algorithm, performing the algAlloc querying
and programmatically returning required buffers.

It automatically creates a C source file which can be directly included 
in the final XDAIS static application [e.g. Ref Framework Level 1]. Hence
the tricky step of creating the variables, alignment from pre-run is gone - 
it is now done automatically.

It is done using BIOS LOG_printf(). CCS has the ability to LOG to a file. 
We create the file and ensure that valid C source is created. For example
the pre-program produces a file for e.g. a G729ENC XDAIS algorithm of :-

/* 
 * This file is generated by the XDAIS static pre-program. It creates the 
 * buffers requested by the algorithm with the requested size, alignment, 
 * and also provides a subsection for linker placement 
 */ 

#include <std.h>

#pragma DATA_SECTION(g729encBuf0, ".bss:g729encBuf0") 
#pragma DATA_ALIGN(g729encBuf0, 4)

#pragma DATA_SECTION(g729encBuf1, ".bss:g729encBuf1") 
#pragma DATA_ALIGN(g729encBuf1, 2)

Char g729encBuf0[24];
Char g729encBuf1[784];


The numbers above came directly from pre-calls to algAlloc. 
This C source file, g729enc_staticcfg.c, can be included directly in the 
final project.

genbufs is simple and maintainable. It can be run over N channels where
N < 16. It must be run once for each XDAIS algorithm. The generated file 
can then be included *directly* in your end-application.

The XDAIS buffer configuration is therefore done 'a priori' saving valuable 
code and data space for small, compact, static systems.

Instructions for usage are available in spra791.

Q&A
---
Q1: Can I run this on any C5000 or C6000 platform?

---
Q1: Can I run this on any C5000 or C6000 platform?
A1: Yes. 
    The genbufs.c engine behind genbufs need never be modified 
    whether you are using 54x, 55x, 6x, 64x algorithms.
    There are no hardware dependencies in genbufs hence it can be run
    on any platform, board.
